"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9043],{5073:(e,n,l)=>{l.r(n),l.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>t,metadata:()=>u,toc:()=>a});var s=l(4848),i=l(8453);const t={sidebar_position:10},o="Compiling Plutus Tx",u={id:"using-plutus-tx/compiling-plutus-tx",title:"Compiling Plutus Tx",description:"The Plutus Tx compiler is a GHC plugin, provided by the plutus-tx-plugin package.",source:"@site/docs/using-plutus-tx/compiling-plutus-tx.md",sourceDirName:"using-plutus-tx",slug:"/using-plutus-tx/compiling-plutus-tx",permalink:"/docs/using-plutus-tx/compiling-plutus-tx",draft:!1,unlisted:!1,editUrl:"https://github.com/IntersectMBO/plutus/edit/master/doc/docusaurus/docs/using-plutus-tx/compiling-plutus-tx.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Environment Setup",permalink:"/docs/using-plutus-tx/environment-setup"},next:{title:"Differences From Haskell",permalink:"/docs/using-plutus-tx/differences-from-haskell"}},r={},a=[{value:"Compiling Using Template Haskell (Preferred)",id:"compiling-using-template-haskell-preferred",level:2},{value:"Compiling Using GHC Flag",id:"compiling-using-ghc-flag",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"compiling-plutus-tx",children:"Compiling Plutus Tx"}),"\n",(0,s.jsxs)(n.p,{children:["The Plutus Tx compiler is a GHC plugin, provided by the ",(0,s.jsx)(n.code,{children:"plutus-tx-plugin"})," package.\nThere are two ways to invoke the plugin: via Template Haskell (preferred) or using a GHC flag."]}),"\n",(0,s.jsx)(n.p,{children:"Let\u2019s assume we want to compile the following code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"module A where\n\nimport qualified PlutusTx.Prelude as PlutusTx\n\nmyPlutusTxCode :: Integer -> Integer\nmyPlutusTxCode x = x PlutusTx.+ 1\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["\ud83d\udccc"," ",(0,s.jsx)(n.strong,{children:"NOTE"})]}),"\n",(0,s.jsxs)(n.p,{children:["There are some GHC extensions, flags and pragmas recommended for modules containing Plutus Tx code, but these are omitted here.\nYou can find more information in ",(0,s.jsx)(n.a,{href:"/docs/using-plutus-tx/extensions-flags-pragmas",children:"GHC Extensions, Flags and Pragmas"}),"."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"compiling-using-template-haskell-preferred",children:"Compiling Using Template Haskell (Preferred)"}),"\n",(0,s.jsxs)(n.p,{children:["Here's how to compile ",(0,s.jsx)(n.code,{children:"myPlutusTxCode"})," using Template Haskell:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:"{-# LANGUAGE TemplateHaskell #-}\nmodule B where\n\nimport PlutusTx.Code (CompiledCode)\nimport PlutusTx.TH (compile)\n\nmyPlutusTxCodeCompiled :: CompiledCode (Integer -> Integer)\nmyPlutusTxCodeCompiled = $$(compile [|| myPlutusTxCode ||])\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Under the hood, it uses ",(0,s.jsx)(n.a,{href:"https://hackage.haskell.org/package/template-haskell/docs/Language-Haskell-TH-Syntax.html#v:addCorePlugin",children:(0,s.jsx)(n.code,{children:"addCorePlugin"})})," from the ",(0,s.jsx)(n.code,{children:"template-haskell"})," package to install the plugin into the compilation pipeline."]}),"\n",(0,s.jsxs)(n.p,{children:["You can then compile module ",(0,s.jsx)(n.code,{children:"B"})," as you would any regular Haskell module.\nThe resulting ",(0,s.jsx)(n.code,{children:"CompiledCode"})," contains the UPLC code, and also includes PIR for debugging."]}),"\n",(0,s.jsx)(n.p,{children:"Template Haskell is a complicated piece of machinery, but as you can see, you need to understand almost none of it for the purpose of compiling Plutus Tx."}),"\n",(0,s.jsxs)(n.p,{children:["This method is preferred since it can leverage Template Haskell's ",(0,s.jsx)(n.a,{href:"https://hackage.haskell.org/package/template-haskell/docs/Language-Haskell-TH.html#v:location",children:(0,s.jsx)(n.code,{children:"location"})})," function to pass the location of ",(0,s.jsx)(n.code,{children:"$$(compile [|| ... ||])"})," to the plugin, which is used in error messages."]}),"\n",(0,s.jsx)(n.h2,{id:"compiling-using-ghc-flag",children:"Compiling Using GHC Flag"}),"\n",(0,s.jsxs)(n.p,{children:["An alternative way to compile ",(0,s.jsx)(n.code,{children:"myPlutusTxCode"})," is by using the ",(0,s.jsx)(n.code,{children:"-fplugin"})," GHC flag, which installs a plugin into the pipeline.\nUse this flag with the ",(0,s.jsx)(n.code,{children:"plc"})," function:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-haskell",children:'{-# OPTIONS_GHC -fplugin PlutusTx.Plugin #-}\nmodule B where\n\nimport Data.Proxy\nimport PlutusTx.Code (CompiledCode)\nimport PlutusTx.Plugin (plc)\n\nmyPlutusTxCodeCompiled :: CompiledCode (Integer -> Integer)\nmyPlutusTxCodeCompiled = plc (Proxy @"location info") myPlutusTxCode\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Here you can manually provide the location info to be included in error messages, but it's not essential, especially if ",(0,s.jsx)(n.code,{children:"plc"})," is only called once in the module, since there won't be any confusion about which ",(0,s.jsx)(n.code,{children:"plc"})," is causing the issue if the module fails to compile."]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"-fplugin"})," flag must be used on every module that invokes ",(0,s.jsx)(n.code,{children:"plc"}),"."]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,l)=>{l.d(n,{R:()=>o,x:()=>u});var s=l(6540);const i={},t=s.createContext(i);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);